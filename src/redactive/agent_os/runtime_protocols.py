from typing import Protocol, runtime_checkable

from redactive.agent_os.native_tools.protocol import Tool
from redactive.agent_os.spec.agent import OAgentSpec
from redactive.agent_os.spec.engagements import Engagement, EngagementRuntimeData, EngagementUser


class ToolRuntime(Protocol):
    def __init__(self): ...

    def get_tool_by_name(self, tool_name: str) -> Tool: ...

    async def invoke_tool(self, tool_name: str, inputs: dict) -> dict: ...

class AgentRuntime(Protocol):
    def __init__(self): ...

    def get_oagent_spec(self, agent_name: str) -> OAgentSpec: ...

    def list_all_agents(self) -> list[OAgentSpec]: ...

    def create_engagement(self, agent_name: str, user: EngagementUser) -> str: ...

    def append_to_engagement(self, engagement_id: str, text: str) -> None: ...

    def get_engagement(self, engagement_id: str) -> Engagement: ...

    def get_engagement_runtime_data(self, engagement_id: str) -> EngagementRuntimeData: ...

    async def process_engagement(self, engagement_id: str) -> None: ...

@runtime_checkable
class MutableAgentRuntime(AgentRuntime, Protocol):
    def update_agent(self, oagent_spec: OAgentSpec): ...